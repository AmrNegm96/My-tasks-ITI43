// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task16Cont;

#nullable disable

namespace Task16Cont.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20230303092311_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task16Cont.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<bool>("IsEmployee");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Task16Cont.Student", b =>
                {
                    b.HasBaseType("Task16Cont.Person");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue(false);
                });

            modelBuilder.Entity("Task16Cont.Teacher", b =>
                {
                    b.HasBaseType("Task16Cont.Person");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasDiscriminator().HasValue(true);
                });
#pragma warning restore 612, 618
        }
    }
}
